@import url("https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400..900;1,400..900&display=swap");
//Backplate
#textboxcontainer {
    /* Define the styles for the centered div */
    position: relative;
    top: 20%;
    left: 20%;
    transform: translate(-25%, -50%);
    height: 50%;
    width: 50%;
    // transform: skew(5deg, -12deg) translateY(-200px);
    background-color: black;
}

//Backplate
.textbox {
    /* Define the styles for the centered div */
   
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-25%, -50%);
    height: calc(100% - 50px); /* Subtract 50px from the height */
    width: 100%;
    // background-image: url("../assets/frame/backcanvasdithered3.png");
    background-color: rgb(0, 0, 0);
    color: aliceblue;
  
}

#text-container{
    
    font-family: "Playfair Display", serif;
    height: 85%;
    position: absolute;
    color: aliceblue;
    transform: translateY(35px);
    padding-top: 3em;
    font-size: calc((1vh + 1vw) / 0.8);
    //overflow-wrap: break-word;
    text-align: left;
    width: 70%;
    // margin-left: -50%;
    // padding-left: 20%;
    text-shadow: 1px 1px 2px black;
    -webkit-text-shadow:1px 1px 2px black;
    -moz-text-shadow: 1px 1px 2px black;
  
}


//Corners
@for $i from 1 through 4 {
    $right: if($i % 2 == 0, 0, auto);
    $top: if($i <= 2, 0, auto);
    $bottom: if($i > 2, 0, auto);
    $left: if($i % 2 == 1, 0, auto);
    $size: 50px;

    .corner-#{$i} {
        width: $size; // Set the width of the corner
        height: $size; // Set the height of the corner
        background-image: url("../assets/frame/c#{$i}.png");
        position: absolute;

        // Adjust positioning based on corner number
        @if $i == 3 {
            right: 0;
            bottom: 0;
        } @else if $i == 4 {
            left: 0;
            bottom: 0;
        } @else {
            right: $right;
            top: $top;
            left: $left;
            bottom: $bottom;
        }

        background-size: contain;
    }
}



//Frame
$divSize: 5px;
$centerIt: calc(100% - $divSize);

@mixin frame-style($position, $rotation, $bg-position, $iteration) {
    position: fixed;
    width: if($position == "left" or $position == "right", $divSize, 100%);
    height: if($position == "top" or $position == "bottom", $divSize, 100%);
    background-image: if($iteration % 2 == 1, url("../assets/frame/frame3.png"), url("../assets/frame/frame4.png"));

    background-size: contain;
    z-index: -1;
    overflow: hidden;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    #{$position}: if($position == "top" or $position == "bottom", 0, if($position == "right", $centerIt, 0));
    #{$position}: if($position == "left" or $position == "top", 0, if($position == "bottom", $centerIt, 0));
    background-position: $bg-position;
    transform: rotateZ($rotation);
}

.frame-1 {
    @include frame-style(top, 0deg, center top, 1); // Pass iteration count as 1 for frame-1
}

.frame-2 {
    @include frame-style(right, 180deg, right center, 2); // Pass iteration count as 2 for frame-2
}

.frame-3 {
    @include frame-style(bottom, 180deg, center bottom, 3); // Pass iteration count as 3 for frame-3
    bottom: 0;
}

.frame-4 {
    @include frame-style(left, 0deg, left center, 4); // Pass iteration count as 4 for frame-4
}
